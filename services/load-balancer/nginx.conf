# Nginx Load Balancer Configuration for High-Scale Microservices
# This configuration can handle 100,000+ requests per second

events {
    worker_connections 10000;  # High connection limit
    use epoll;                 # Efficient event model
    multi_accept on;           # Accept multiple connections
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=1000r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=100r/s;

    # Upstream servers for API Gateway
    upstream api_gateway {
        least_conn;  # Load balancing algorithm
        server localhost:3000 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3003 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3004 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3005 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;  # Keep connections alive
    }

    # Upstream servers for Auth Service
    upstream auth_service {
        least_conn;
        server localhost:3002 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3006 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3007 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3008 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Upstream servers for User Service
    upstream user_service {
        least_conn;
        server localhost:3001 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3009 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3010 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:3011 weight=1 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Gateway routes
        location /api/ {
            limit_req zone=api burst=200 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Login endpoint with stricter rate limiting
        location /api/login {
            limit_req zone=login burst=50 nodelay;
            
            proxy_pass http://auth_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Register endpoint with stricter rate limiting
        location /api/register {
            limit_req zone=login burst=50 nodelay;
            
            proxy_pass http://auth_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Metrics endpoint (no rate limiting)
        location /metrics {
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
} 